// ./gradlew clean build generateRelease
apply plugin: 'maven'

def groupId = project.PUBLISH_GROUP_ID
def artifactId = project.PUBLISH_ARTIFACT_ID
def version = project.PUBLISH_VERSION

def localReleaseDest = "/Users/aman/git/vwo-mobile-android"
def snapshotRepo = "/Users/aman/git/vwo-android-snapshot"

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name != "debug") {
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        task.exclude "**/R.class"
        task.exclude "**/R\$*.class"
        task.exclude "android/**"
        artifacts.add('archives', task)
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
    exclude(
            '**/R.*',
            "**/constants/**",
            "**/data/**",
            "**/listeners/**",
            "**/models/**",
            "**/network/**",
            "**/segmentation/**",
            "**/NetworkUtils.*",
            "**/Parceler.*",
            "**/VWOPreference.*",
            "**/VWOUrlBuilder.*",
            "**/VWOUtils.*",
            "**/VWOSocket.*",
            "**/Connection.*",
            "**/gestures/**",
            "**/logging/**"
    )
    options {
        encoding = 'UTF-8'
        docEncoding = 'UTF-8'
        charSet = 'UTF-8'
    }
    failOnError false // add this line
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version

            pom.project {
                name 'VWO Mobile SDK'
                packaging 'jar'
                description 'VWO mobile SDK for A/B Testing android apps'
                url 'https://github.com/wingify/vwo-mobile-android'
            }

            // Add other pom properties here if you want (developer details / licenses)
            repository(url: "file://${localReleaseDest}")
            snapshotRepository(url: "file://${snapshotRepo}")
        }
    }
}.doLast {
    println "Release ${version} can be found at ${localReleaseDest}/"
}

task generateRelease {
    println "Generating Release ${version}"
}

subprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

uploadArchives.dependsOn 'testReleaseUnitTest'

generateRelease.dependsOn(uploadArchives)


artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
